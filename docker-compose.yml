version: '3.8'

services:
  # webapp:
  #   image: mcr.microsoft.com/dotnet/core/samples:aspnetapp
  #   ports:
  #     - 80
  #     - 443
  #   environment: 
  #     - ASPNETCORE_ENVORIONMENT=Development
  #     - ASPNETCORE_URLS=https://+:443;http://+:80
  #     - ASPNETCORE_Kestrel__Certificates__Default__Password=wondering
  #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
  #   volumes:
  #     - ~/.aspnet/https:/https:ro
  
  nginx:
    image: nginx:stable-alpine
    ports:
      - 8080:80
      - 443:443
    volumes:
      - ./docker/nginx/cache:/var/cache/nginx
      - ./docker/nginx/run:/var/cache/run
      - ./docker/nginx/myrental2.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.crt:/etc/nginx/nginx.crt
      - ./docker/nginx/nginx.key:/etc/nginx/nginx.key
    links:
      - backend
      - frontend

  # TODO: need config
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment: 
      - ASPNETCORE_ENVORIONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    #   - ASPNETCORE_Kestrel__Certificates__Default__Password=wondering
    #   - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    # volumes:
    #   - ./MyRental2/bin/Release/netcoreapp3.1/publish:
    links:
      - postgres
      - redis
    ports:
      - 5000:5000
      - 5001:5001

  frontend:
    stdin_open: true
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    links:
      - backend
    ports:
      - 3000:3000
    entrypoint:
      - /frontend-entrypoint.sh
    volumes:
      - ./frontend:/app
      - ./docker/frontend/node_modules:/app/node_modules

  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile      
    environment:
      POSTGRES_USER: louis
      POSTGRES_PASSWORD: DLl8R77ckwLtCN-k=3*T%bh)y,G}FZ#K
      POSTGRES_DB: MyRental2
    ports:
      - 5442:5432
    volumes:
    - ./docker/postgres/data:/var/lib/postgresql
    - ./docker/postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    container_name: postgres_db

  redis:
    image: redis:alpine
    ports:
      - 16379:6379
    volumes:
      - ./docker/redis/data:/data
    container_name: redis_db
      